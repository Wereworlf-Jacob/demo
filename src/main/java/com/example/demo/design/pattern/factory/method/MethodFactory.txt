上一个我们了解了简单工厂，那么接下来需求升级了。
我们的披萨店可以生产芝士披萨，蛤蜊披萨，接下来有很多加盟店加盟我们的披萨
比如纽约，芝加哥，加州，但是加盟店想要根据当地的特色，来定制自己的披萨
但是披萨的流程和基础配料方案时是不变的，只是酱料，或面饼厚度有不一样的变化，那么简单工厂实现的话
只能是
if(纽约){
    if(芝士) return 纽约芝士披萨
    if(蛤蜊) return 纽约蛤蜊披萨
}
if(芝加哥){
   if(芝士)  return 芝加哥芝士披萨
   if(蛤蜊)  return 芝加哥蛤蜊披萨
} 当我们每添加一个加盟店要copy一份代码，每添加一种披萨，每个加盟店都要添加一份代码
基于上述需求，我们引入“工厂方法模式”
定义：定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。